version: '3.8'

services:
  # Next.js 应用服务
  jira-cs-server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: jira-cs-server
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - HOSTNAME=0.0.0.0
      # 从 .env 文件读取环境变量
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL=${OPENAI_MODEL:-gpt-4o}
      - OPENAI_BASE_URL=${OPENAI_BASE_URL:-https://api.openai.com/v1}
      - JIRA_BASE_URL=${JIRA_BASE_URL:-https://jirastage.deltaww.com}
      - JIRA_AUTH_TOKEN=${JIRA_AUTH_TOKEN}
      - TEST_MODE=${TEST_MODE:-false}
    env_file:
      - .env
    networks:
      - jira-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Nginx 反向代理
  nginx:
    image: nginx:alpine
    container_name: jira-cs-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/logs:/var/log/nginx
    depends_on:
      jira-cs-server:
        condition: service_healthy
    networks:
      - jira-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

networks:
  jira-network:
    driver: bridge
